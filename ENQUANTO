programa 
  funcao inicio() {
    inteiro  x = 0

    enquanto(verdadeiro){
      x = x + 1
      escreva("O valor da variavel é: ", x , "\n")
    }
    
  }
}
=========================================================================================

/* Faça um programa que tenha 2 opções:

   1 - Se o usuario digitar "1", faça com que o programa continue executando.
   2 - Se o usuario digitar "2",  faça com que o programa seja finalizado.

  */
  

programa {
  inteiro y 
  logico continuaRepeticao = verdadeiro

  funcao inicio() {
    enquanto(continuaRepeticao){
      escreva("Opção: [1], - Continuar repetição, [2], - Finalizado \n")
      leia(y)

      se(y == 1){
        continuaRepeticao = verdadeiro
      }senao se(y == 2){
        continuaRepeticao = falso
      }
    }  
  }
}

===============================================================================================
programa 
  funcao inicio()
    inteiro  x 
    logico parar = verdadeiro

    enquanto(parar){
      escreva("Escreva sua opção: [0] - sair, [1] - continuar \n")
      leia(x)

      
      se(x == 0){
        parar = falso
      }
    }
  }
}

=================================================================================================================================


 /* Faça um programa que solicite ao usuario as seguintes informações:
 1 - Escreva a mensagem: Bem vindo
 2 - Escreva a mensagem: Bom almoço
 3 - Escreva a mensagem: Bom Descanso
 0 - Finaliza a repetição 

 */
programa {

  inteiro x
  logico repeticao = verdadeiro 

  funcao inicio() {
    enquanto(x){
    escreva(" Escolha a opção: [1] - Bem vindo, [2] - Bom almoço, [3] - Bom descanso, [0] - Finalizar \n")
    leia(x)
      se(x == 1){
        escreva("Bem vindo")
        repeticao = verdadeiro
      }senao se (x == 2){
        escreva("Bom almoço")
      }senao se (x == 3){
        escreva("Bom descanso")
      }senao se(x == 0){
        escreva("Porgrama finalizado")
        repeticao = falso
      }senao{
        escreva("Opção invalida ")
      }
    }
  }
}













