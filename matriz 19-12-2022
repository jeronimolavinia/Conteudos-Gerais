programa {
  inclua biblioteca Util --> u


  inteiro vetor [5] = {7,7,7,7,7}
  inteiro matriz [6][6] = {
    {1,1,1,1,1,1}, 
    {1,1,1,1,1,1}, 
    {1,1,1,1,1,1},
    {1,1,1,1,1,1},
    {1,1,1,1,1,1},
    {1,1,1,1,1,1}}

  funcao inicio() {
    para(inteiro i = 0; i < 6; i++){
      para(inteiro j = 0; j < 6; j++){
        u.aguarde(100)
        escreva("Linha: ", i  , " x" , " Coluna: ", j , " Valor da posição ", matriz[i][j] , "\n")
      }
    }
    
  }
}

=======================================================================================================
programa {
  inclua biblioteca Util --> u
  inteiro matriz [1000][1000] 
    
  funcao inicio() {
    para(inteiro i = 0; i < 1000; i++){
      para(inteiro j = 0; j < 1000; j++){
        matriz[i][j] = u.sorteia(0,1)
        escreva(" ", matriz[i][j], " ")
      }
      escreva("\n")
      u.aguarde(1)
    }
  }
}
==========================================================================================================
//Correcao 20/12/2022
/* Fazer um programa que gere uma matriz de 6x6 (Ou da sua preferência), que armazene para cada posição numeros aleatorios de 1 a 5.

Após preencher toda a matriz, em outra estrutura de repetição, faça uma varredura na matriz e caso encontre um numero 3 (ou outro numero armazenado na constante "numeroComparacao", escreva:
Na posição [NUMERO DA LINHA] X [NUMERO DA COLUNA] foi encontrado o numero 3
*/

programa {
inclua biblioteca Util --> lib

  inteiro const comparacao = 3
  inteiro matriz[6][6] 


  funcao preencherMatriz() {
    escreva("Vai varrer a matriz \n")
    para(inteiro x = 0; x < 6; x++){
      para(inteiro y = 0; y < 6; y++){
        matriz[x][y] = lib.sorteia(1,5)
      }
    }
    escreva("Preencheu a matriz \n")
  }

  funcao varrerMatriz() {
    ("Vai varrer a matriz \n")
    para(inteiro x = 0; x < 6; x++){
      para(inteiro y = 0; y < 6; y++){
        se(compararNumeros(matriz[x][y])){
          escreva("Na posição ", x , "X", y, "foi encontrado o numero", comparacao , "\n") 
        }
      }
    }
    escreva("Finalizado \n")
  }

  funcao logico compararNumeros(inteiro numeroAtual){
    se(numeroAtual > comparacao){
      retorne verdadeiro
    }senao{
      retorne falso
    }
  }

  funcao inicio() {
    preencherMatriz()
    varrerMatriz()
    
  }
}
=====================================================================================================

/*

 1) Faça um programa que preencha uma matriz 10x10 somente com numeros inteiros
 aleatorios.

 2) Mostrar matriz de forma ordenada.

*/ 

programa {

  inclua biblioteca Util --> lib 
  inteiro matriz[10][10] 
  
  funcao obterMatriz(){
    para(inteiro x = 0; x < 10; x++){
      para(inteiro y = 0; y < 10; y++){
        matriz[x][y] = lib.sorteia(1,9)
        escreva(" ", matriz[x][y] , " ")
      
      }
      escreva("\n")
    }
  }
  funcao inicio(){
    obterMatriz()

  }

}


=======================================================================================================
programa {

  inteiro matriz[5][5] 
  
  funcao obterMatriz(){
    para(inteiro x = 0; x < 5; x++){
      para(inteiro y = 0; y < 5; y++){
        se(4-x == y ou x == y){
          matriz[x][y] = 1 
        }senao {
          matriz[x][y] = 0

        }
        escreva(" ", matriz[x][y], " ")
      }
      escreva("\n")
    }
  }


  funcao inicio(){
    obterMatriz()

  }

}







